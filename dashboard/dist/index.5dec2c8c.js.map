{"mappings":"AAAA,aAcA,SAASA,kBAAkBC,GAC1BC,EAAE,eAAeC,KAAKF,EAAY,aAAe,gBACjDC,EAAE,iBAAiBC,KAAKF,EAAYG,cAAcC,kBAAoB,eACvE,CAEA,SAASC,0BAA0BL,GAE9BA,GACHC,EAAE,iBAAiBC,KAAK,cAGxBD,EAAE,kBAAkBK,UAGpBL,EAAE,iBAAiBC,KAAK,gBAE1B,CAEA,SAASK,eAAeC,EAAKC,EAAOC,GAOnC,GAAIA,EAAO,CACV,IAAIC,EAAKV,EAAE,kCAAkCW,SAASX,EAAE,sBACxDA,EAAE,mCAAmCC,KAAKM,GAAKI,SAASD,GACxDV,EAAE,kCAAkCY,KAAK,KAAMV,cAAcW,QAAQN,IAC9DN,KAAKO,GACLG,SAASD,EACjB,MAICV,EAAE,IAAME,cAAcY,YAAYP,IAAMN,KAAKO,GAI3CO,QAAQC,IAAI,QAEZhB,EAAE,WAAWC,KAAKC,cAAce,SAAS,8BAA+B,IAExEjB,EAAE,oBAAoBC,KAAKC,cAAce,SAAS,wCAAyC,IAC3FjB,EAAE,oBAAoBC,KAAKC,cAAce,SAAS,wCAAyC,IAC3FjB,EAAE,iBAAiBC,KAAKC,cAAce,SAAS,wCAAyC,IACxFjB,EAAE,oBAAoBC,KAAKC,cAAce,SAAS,uCAAwC,IAC1FjB,EAAE,kBAAkBC,KAAKC,cAAce,SAAS,qCAAsC,GAC1F,CA5DAjB,GAAE,WAEDE,cAAcgB,wBAAwBd,2BAA2B,GAGjEF,cAAciB,2BAA2BrB,mBAAmB,GAG5DI,cAAckB,kBAAkBd,gBAAgB,EACjD","sources":["src/main.js"],"sourcesContent":["\"use strict\";\n\n$(function() {\n\t// sets a function that will be called when the websocket connects/disconnects\n\tNetworkTables.addWsConnectionListener(onNetworkTablesConnection, true);\n\t\n\t// sets a function that will be called when the robot connects/disconnects\n\tNetworkTables.addRobotConnectionListener(onRobotConnection, true);\n\t\n\t// sets a function that will be called when any NetworkTables key/value changes\n\tNetworkTables.addGlobalListener(onValueChanged, true);\n});\n\n\nfunction onRobotConnection(connected) {\n\t$('#robotstate').text(connected ? \"Connected!\" : \"Disconnected\");\n\t$('#robotAddress').text(connected ? NetworkTables.getRobotAddress() : \"disconnected\");\n}\n\nfunction onNetworkTablesConnection(connected) {\n\n\tif (connected) {\n\t\t$(\"#connectstate\").text(\"Connected!\");\n\t\t\n\t\t// clear the table\n\t\t$(\"#nt tbody > tr\").remove();\n\t\t\n\t} else {\n\t\t$(\"#connectstate\").text(\"Disconnected!\");\n\t}\n}\n\nfunction onValueChanged(key, value, isNew) {\n\n\t// key thing here: we're using the various NetworkTable keys as\n\t// the id of the elements that we're appending, for simplicity. However,\n\t// the key names aren't always valid HTML identifiers, so we use\n\t// the NetworkTables.keyToId() function to convert them appropriately\n\n\tif (isNew) {\n\t\tvar tr = $('<div class=\"table-info\"></div>').appendTo($('#nt > .table:last'));\n\t\t$('<div class=\"table-label\"></div>').text(key).appendTo(tr);\n\t\t$('<div class=\"table-area\"></div>').attr('id', NetworkTables.keyToId(key))\n\t\t\t\t\t   .text(value)\n\t\t\t\t\t   .appendTo(tr);\n\t} else {\n\t\n\t\t// similarly, use keySelector to convert the key to a valid jQuery\n\t\t// selector. This should work for class names also, not just for ids\n\t\t$('#' + NetworkTables.keySelector(key)).text(value);\n\t}\n\n    \n    console.log(\"here\");\n\n    $('#ntmtst').text(NetworkTables.getValue('/SmartDashboard/Testing/tst', 0));\n\n    $('#build-date-area').text(NetworkTables.getValue('/SmartDashboard/BuildData/deploy-date', 0));\n    $('#build-host-area').text(NetworkTables.getValue('/SmartDashboard/BuildData/deploy-host', 0));\n    $('#builder-area').text(NetworkTables.getValue('/SmartDashboard/BuildData/deploy-user', 0));\n    $('#git-branch-area').text(NetworkTables.getValue('/SmartDashboard/BuildData/git-branch', 0));\n    $('#git-hash-area').text(NetworkTables.getValue('/SmartDashboard/BuildData/git-desc', 0));\n}"],"names":["onRobotConnection","connected","$","text","NetworkTables","getRobotAddress","onNetworkTablesConnection","remove","onValueChanged","key","value","isNew","tr","appendTo","attr","keyToId","keySelector","console","log","getValue","addWsConnectionListener","addRobotConnectionListener","addGlobalListener"],"version":3,"file":"index.5dec2c8c.js.map"}